package com.avon.parser;

import java.io.File;
import java.util.Date;
import java.util.HashMap;
import org.apache.log4j.Logger;

import com.sforce.soap.enterprise.sobject.Campania_Avon__c;
import com.sforce.soap.enterprise.sobject.Contact;
import com.sforce.soap.enterprise.sobject.Movimiento__c;


	public class ModParser extends RootParser{

		protected Logger logger = Logger.getLogger(this.getClass());
		private HashMap<String, Movimiento__c> mapMod;
	
			protected File fMOD2610 = null;
			private String ivMod;
			
	
	public void setupParser() {
	}
	
	public ModParser(File fMOD2610, String ivMod) {
		super(fMOD2610);
		this.ivMod=ivMod;
	}
	@Override
	void item(String[] campos) {
		
 		Movimiento__c ivr = new Movimiento__c();
			
			String registro =campos[2].trim();
			
			//No detecta key 
			//String key = fMOD2610.getName() + registro;

			Contact rep = new Contact();
			rep.setRegistro__c(registro);
			logger.info("Registro:" + registro);
			ivr.setRepresentante__r(rep);
			logger.info("Representante:" + rep);
			ivr.setRecordTypeId(ivMod);
			logger.info("Tipo de Registro:" + ivMod);
			ivr.setTipo_Modificacion__c("COD");
			//ivr.setExternal_Id_c__c(key);
			ivr.setMotivo__c(campos[5].trim());

			//Parseo de fecha 
			String sdate = campos[9].trim();
			Date fechaIVR = null;
			try{
				fechaIVR = super.getDate(sdate, "MM/dd/yyyy");
			}catch(Exception e){
				logger.error("Error parseando la fecha:" + sdate);
			}
			ivr.setFecha_IVR__c(fechaIVR);
			logger.info("Fecha:" + fechaIVR.getDate());
			
			String campania = campos[4].trim() + fechaIVR.getDate();
			Campania_Avon__c cam = new Campania_Avon__c();
			cam.setExternal_Id__c(campania);
			ivr.setA_Campania__r(cam);
			logger.info("Campania:" + campania);
			
			
			String campaniados = campos[7].trim();
			Campania_Avon__c campdos = new Campania_Avon__c();
			campdos.setExternal_Id__c(campaniados);
			ivr.setA_Campania__r(cam);
			logger.info("Campania:" + campaniados);
			
			ivr.setAutorizacion_IVR__c(campos[10].trim());
			ivr.setDigitos__c(campos[11].trim());
					
			if(mapMod==null){
				mapMod = new HashMap<String, Movimiento__c>();
			}
			mapMod.putAll(getmapMod());
		}		
	public HashMap<String, Movimiento__c> getmapMod() {
		return mapMod;
		}
	public String getIvMod() {
		return ivMod;
	}
	public void setIvMod(String ivMod) {
		this.ivMod = ivMod;
	}
}
